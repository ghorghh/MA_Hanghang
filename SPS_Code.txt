
 
// the meanning of configuration commands could be found in User's Guide

//SC configuration
"SC_GetResults" := FALSE;


//SL configuration
"SL_O_Byte3" := 2#0000_0001; //Segment Moduls
"SL_O_Byte4" := 16#04; // 4 Segmente
"SL_O_Byte6" := 16#02; // Frequenz

//creat UDP connection 
IF "TCON_Req" = FALSE THEN
    "TCON_Req" := TRUE;
END_IF;

//receive UDP data--false
"TURCV_Req" := FALSE;
//send UDP data--false
"TUSEND_Req" := FALSE;

//setting for RFID Header
IF "RFID_I_Byte0" = 2#1000_0111 OR "RFID_I_Byte0" = 2#1010_0111 THEN
    "RFID_O_Byte0" := 16#00;
    "RFID_O_Byte1" := 16#00;
    "RFID_O_Byte2" := 16#00;
    "RFID_O_Byte3" := 16#00;
    "RFID_O_Byte4" := 16#00;
    "RFID_O_Byte5" := 16#00;
    "RFID_O_Byte6" := 16#00;
    "RFID_O_Byte7" := 16#00;
    "RFID_O_Byte8" := 16#00;
    "RFID_O_Byte9" := 16#00;
END_IF;




    
//if the workpiece is taken away
IF "RFID_I_Byte0_Bit0" = 0 THEN
    //SL with white flash color
    "SL_O_Byte0" := 2#1111_1111;
    "SL_O_Byte1" := 2#1111_1111;
    
    //variable reset
    "MyData".Mark_For_Werkstück_Erstmal_da := 16#00;
    "MyData".Mark_For_Deckel_gefunden := 16#00;
    
    "MyData".Mark_Unten_obInOrdnung := 16#00;
    "MyData".Mark_Mittel_obInOrdnung := 16#00;
    "MyData".Mark_Oben_obInOrdnung := 16#00;
    
    
    "RFID_O_Byte0" := 16#00;
    "RFID_O_Byte1" := 16#00;
    "RFID_O_Byte2" := 16#00;
    "RFID_O_Byte3" := 16#00;
    "RFID_O_Byte4" := 16#00;
    "RFID_O_Byte5" := 16#00;
    "RFID_O_Byte6" := 16#00;
    "RFID_O_Byte7" := 16#00;
    "RFID_O_Byte8" := 16#00;
    "RFID_O_Byte9" := 16#00;
    
    //stop SC
    "SC_Start" := FALSE;
    "SC_Stop" := TRUE;
    
END_IF;
//if the workpiece is put on the work position
IF "RFID_I_Byte0_Bit0" = 1 THEN
    IF "MyData".Mark_For_Werkstück_Erstmal_da = 16#00 THEN

        //read RFID Tag ID firstly
        "MyData".TUSEND_Data_Raspberry[0] := "RFID_I_Byte0";
        "MyData".TUSEND_Data_Raspberry[1] := "RFID_I_Byte1";
        "MyData".TUSEND_Data_Raspberry[2] := "RFID_I_Byte2";
        "MyData".TUSEND_Data_Raspberry[3] := "RFID_I_Byte3";
        "MyData".TUSEND_Data_Raspberry[4] := "RFID_I_Byte4";
        "MyData".TUSEND_Data_Raspberry[5] := "RFID_I_Byte5";
        "MyData".TUSEND_Data_Raspberry[6] := "RFID_I_Byte6";
        "MyData".TUSEND_Data_Raspberry[7] := "RFID_I_Byte7";
        "MyData".TUSEND_Data_Raspberry[8] := "RFID_I_Byte8";
        "MyData".TUSEND_Data_Raspberry[9] := "RFID_I_Byte9";
        
        //read RFID Tag data
        IF "RFID_I_Byte0" = 2#1000_0001 THEN
            "RFID_O_Byte1" := 16#01;// read data from RFID 
            "RFID_O_Byte2" := 16#00;
            "RFID_O_Byte3" := 16#00;
            "RFID_O_Byte4" := 16#03;
            "RFID_O_Byte5" := 16#00;
            
            "RFID_O_Byte0" := 16#01;
            "RFID_O_Byte9" := 16#01;
        END_IF;
        
        //reset
        "MyData".Mark_For_Werkstück_Erstmal_da := 16#FF;
    END_IF;

    //Start SC
    "SC_Stop" := FALSE;
    "SC_Start" := TRUE;
    

    //if the SC is running and there is data from SC
    IF "BVS_SC_DB".Cam_Running = TRUE AND "BVS_SC_DB".Result_Ready = TRUE THEN
        //Get results firstly once
        "SC_GetResults" := TRUE;
        
        //Configuration Received Data, variables are set in plc programm
        "MyData".TUSEND_Data[10] := %DB32.DBB2; //Helligkeit
        "MyData".TUSEND_Data[11] := %DB32.DBB3; // Unten_obInOrdnung
        "MyData".TUSEND_Data[12] := %DB32.DBB4;// Mittel_obInOrdnung
        "MyData".TUSEND_Data[13] := %DB32.DBB5; //Oben_obInOrdnung
        "MyData".TUSEND_Data[14] := %DB32.DBB6; //Ebene_Unten_fertig
        "MyData".TUSEND_Data[15] := %DB32.DBB7;  //Ebene _Mittel_fertig
        "MyData".TUSEND_Data[16] := %DB32.DBB8;  // Ebene_Oben_fertig
        "MyData".TUSEND_Data[17] := %DB32.DBB9; //Deckel_finden
        "MyData".TUSEND_Data[18] := %DB32.DBB10;//Unten_Grün_Dauer
        "MyData".TUSEND_Data[19] := %DB32.DBB11; //Mittel_Grün_Dauer
        "MyData".TUSEND_Data[20] := %DB32.DBB12; //Oben_Grün_Dauer
        "MyData".TUSEND_Data[21] := %DB32.DBB13;//Unten_Rot_Dauer
        "MyData".TUSEND_Data[22] := %DB32.DBB14;//Mittel_Rot_Dauer
        "MyData".TUSEND_Data[23] := %DB32.DBB15; //Oben_Rot_Dauer
        "MyData".TUSEND_Data[24] := %DB32.DBB16;//Unten_Orange
        "MyData".TUSEND_Data[25] := %DB32.DBB17;//Mittel_Orange
        "MyData".TUSEND_Data[26] := %DB32.DBB18;//Oben_Orange
        "MyData".TUSEND_Data[27] := %DB32.DBB19; //Gelb_Dauer
        "MyData".TUSEND_Data[28] := %DB32.DBB20;//Ebene_Unten_Helligkeit == 0?, ob das Tool übergesprungen
        "MyData".TUSEND_Data[29] := %DB32.DBB21;//Ebene_Mittel_Helligkeit == 0?
        "MyData".TUSEND_Data[30] := %DB32.DBB22;//Ebene_oben_Helligkeit == 0?
        "MyData".TUSEND_Data[31] := "MyData".Deckel_Finden_StopSC;// Mark for Deckel Finden, in the Raspberry make a Fenster in windows
        "MyData".TUSEND_Data[32] := %DB32.DBB23;//Unten_obinOrdnung übersprungen?
        "MyData".TUSEND_Data[33] := %DB32.DBB24;//mittel_obinOrdnung übersprungen?
        "MyData".TUSEND_Data[34] := %DB32.DBB25;//Oben_obinOrdnung übersprungen?
        "MyData".TUSEND_Data[35] := %DB32.DBB26;//wenn true, eine Ebene ist in der Arbeitung
        "MyData".TUSEND_Data[36] := %DB32.DBB27;//Untere Ebene in der Arbeitung
        "MyData".TUSEND_Data[37] := %DB32.DBB28;//Mittlere Ebene in der Arbeitung
        "MyData".TUSEND_Data[38] := %DB32.DBB29;//Obere Ebene in der Arbeitung
        
        //send the data into raspberry
        "MyData".TUSEND_Data_Raspberry[10] := %DB32.DBB2; //Helligkeit
        "MyData".TUSEND_Data_Raspberry[11] := %DB32.DBB9; //Deckel finden
        "MyData".TUSEND_Data_Raspberry[12] := %DB32.DBB19; //Gelb_Dauer
        "MyData".TUSEND_Data_Raspberry[13] := %DB32.DBB26;//wenn true, eine Ebene ist in der Arbeitung
        "MyData".TUSEND_Data_Raspberry[14] := %DB32.DBB6; //Ebene_Unten_fertig
        "MyData".TUSEND_Data_Raspberry[15] := %DB32.DBB7;  //Ebene _Mittel_fertig
        "MyData".TUSEND_Data_Raspberry[16] := %DB32.DBB8;  // Ebene_Oben_fertig
        "MyData".TUSEND_Data_Raspberry[17] := "MyData".Mark_Unten_obInOrdnung;
        "MyData".TUSEND_Data_Raspberry[18] := "MyData".Mark_Mittel_obInOrdnung;
        "MyData".TUSEND_Data_Raspberry[19] := "MyData".Mark_Oben_obInOrdnung;
        
        //Send to Raspberry
        "TUSEND_Req" := TRUE;
            
        // if the caps is found
        IF "MyData".TUSEND_Data[17] = 16#FF THEN
            //read from RFID
            IF "RFID_I_Byte0" = 2#1000_0001 THEN
                "RFID_O_Byte1" := 16#01;// read data from RFID 
                "RFID_O_Byte2" := 16#00;
                "RFID_O_Byte3" := 16#00;
                "RFID_O_Byte4" := 16#03;
                "RFID_O_Byte5" := 16#00;
                
                "RFID_O_Byte0" := 16#01;
                "RFID_O_Byte9" := 16#01;
            END_IF;
            
            //white light which means the caps is found
            "SL_O_Byte1_Bit7" := 0;
            "SL_O_Byte1_Bit6" := 1;
            "SL_O_Byte1_Bit5" := 1;
            "SL_O_Byte1_Bit4" := 1;
            
            //schreiben Ebene Information ins variable
            "MyData".Mark_Unten_obInOrdnung := "RFID_I_Byte1";
            "MyData".Mark_Mittel_obInOrdnung := "RFID_I_Byte2";
            "MyData".Mark_Oben_obInOrdnung := "RFID_I_Byte3";

            //und dann zeigt es mit SL
            IF "MyData".Mark_Unten_obInOrdnung = 16#00 THEN
                "SL_O_Byte1_Bit3" := 0;
                "SL_O_Byte1_Bit2" := 0;
                "SL_O_Byte1_Bit1" := 0;
                "SL_O_Byte1_Bit0" := 0;
            END_IF;
            IF "MyData".Mark_Unten_obInOrdnung = 16#01 THEN
                "SL_O_Byte1_Bit3" := 0;
                "SL_O_Byte1_Bit2" := 0;
                "SL_O_Byte1_Bit1" := 0;
                "SL_O_Byte1_Bit0" := 1;
            END_IF;
            IF "MyData".Mark_Unten_obInOrdnung = 16#02 THEN
                "SL_O_Byte1_Bit3" := 1;
                "SL_O_Byte1_Bit2" := 0;
                "SL_O_Byte1_Bit1" := 1;
                "SL_O_Byte1_Bit0" := 0;
            END_IF;
            IF "MyData".Mark_Mittel_obInOrdnung = 16#00 THEN
                "SL_O_Byte0_Bit7" := 0;
                "SL_O_Byte0_Bit6" := 0;
                "SL_O_Byte0_Bit5" := 0;
                "SL_O_Byte0_Bit4" := 0;
            END_IF;
            IF "MyData".Mark_Mittel_obInOrdnung = 16#01 THEN
                "SL_O_Byte0_Bit7" := 0;
                "SL_O_Byte0_Bit6" := 0;
                "SL_O_Byte0_Bit5" := 0;
                "SL_O_Byte0_Bit4" := 1;
            END_IF;
            IF "MyData".Mark_Mittel_obInOrdnung = 16#02 THEN
                "SL_O_Byte0_Bit7" := 1;
                "SL_O_Byte0_Bit6" := 0;
                "SL_O_Byte0_Bit5" := 1;
                "SL_O_Byte0_Bit4" := 0;
            END_IF;
            IF "MyData".Mark_Oben_obInOrdnung = 16#00 THEN
                "SL_O_Byte0_Bit3" := 0;
                "SL_O_Byte0_Bit2" := 0;
                "SL_O_Byte0_Bit1" := 0;
                "SL_O_Byte0_Bit0" := 0;
            END_IF;
            IF "MyData".Mark_Oben_obInOrdnung = 16#01 THEN
                "SL_O_Byte0_Bit3" := 0;
                "SL_O_Byte0_Bit2" := 0;
                "SL_O_Byte0_Bit1" := 0;
                "SL_O_Byte0_Bit0" := 1;
            END_IF;
            IF "MyData".Mark_Oben_obInOrdnung = 16#02 THEN
                "SL_O_Byte0_Bit3" := 1;
                "SL_O_Byte0_Bit2" := 0;
                "SL_O_Byte0_Bit1" := 1;
                "SL_O_Byte0_Bit0" := 0;
            END_IF;
            //Set Mark Position, Deckel Gefunden, Warte Auf Entnehmen des Werkstücks
            "MyData".Mark_For_Deckel_gefunden := 16#FF;
        END_IF;
        
        
        //Wenn Deckel nicht gefunden wird
        IF "MyData".TUSEND_Data[17] = 16#00 AND "MyData".Mark_For_Deckel_gefunden = 16#00 THEN
            // Reset SL
            IF "SL_O_Byte0" = 2#1111_1111 AND "SL_O_Byte1" = 2#1111_1111 THEN
                "SL_O_Byte0" := 16#00;
                "SL_O_Byte1" := 16#00;
            END_IF;
            
            // Helligkeit Fehler, 4th Segment zeigt gelb dauerhaft licht
            IF "MyData".TUSEND_Data[27] = 16#FF THEN
                //SL, Gelb Dauer
                "SL_O_Byte1_Bit7" := 0;
                "SL_O_Byte1_Bit6" := 0;
                "SL_O_Byte1_Bit5" := 1;
                "SL_O_Byte1_Bit4" := 1;
            END_IF;
            //Helligkeit gut, 4th Segement zeigt grün licht
            IF "MyData".TUSEND_Data[27] = 16#00 THEN
                "SL_O_Byte1_Bit7" := 0;
                "SL_O_Byte1_Bit6" := 0;
                "SL_O_Byte1_Bit5" := 0;
                "SL_O_Byte1_Bit4" := 1;
            END_IF;
            
            // Helligkeit Gut und eine Ebene wird in der Arbeitung
            IF "MyData".TUSEND_Data[27] = 16#00 AND "MyData".TUSEND_Data[35] = 16#FF THEN
                
                //Reset MarkforEbene
                IF "MyData".TUSEND_Data[14] = 16#00 AND "MyData".TUSEND_Data[36] = 16#FF THEN
                    //Set Mark for Untere Ebene
                    "MyData".Mark_For_UE := 0;
                    // "MyData".Mark_Unten_obInOrdnung := 0;
                END_IF;
                IF "MyData".TUSEND_Data[15] = 16#00 AND "MyData".TUSEND_Data[37] = 16#FF THEN
                    //Set Mark for mittlere Ebene
                    "MyData".Mark_For_ME := 0;
                    // "MyData".Mark_Mittel_obInOrdnung := 0;
                END_IF;
                IF "MyData".TUSEND_Data[16] = 16#00 AND "MyData".TUSEND_Data[38] = 16#FF THEN
                    //Set Mark for obere Ebene
                    "MyData".Mark_For_OE := 0;
                    // "MyData".Mark_Oben_obInOrdnung := 0;
                END_IF;
                
                //Wenn Untere Ebene in der Arbeitung
                    IF "MyData".TUSEND_Data[36] = 16#FF THEN
                    //Grün_Dauer
                    IF "MyData".TUSEND_Data[18] = 16#FF THEN
                        "SL_O_Byte1_Bit3" := 0;
                        "SL_O_Byte1_Bit2" := 0;
                        "SL_O_Byte1_Bit1" := 0;
                        "SL_O_Byte1_Bit0" := 1;
                    END_IF;
                    //RotDauer
                    IF "MyData".TUSEND_Data[21] = 16#FF THEN
                        "SL_O_Byte1_Bit3" := 0;
                        "SL_O_Byte1_Bit2" := 0;
                        "SL_O_Byte1_Bit1" := 1;
                        "SL_O_Byte1_Bit0" := 0;
                    END_IF;
                    //OrangeDauer
                    IF "MyData".TUSEND_Data[24] = 16#FF THEN
                        "SL_O_Byte1_Bit3" := 0;
                        "SL_O_Byte1_Bit2" := 1;
                        "SL_O_Byte1_Bit1" := 0;
                        "SL_O_Byte1_Bit0" := 1;
                    END_IF;
                    //auf anderer Ebene zeigt es Ordnungsinformation
                    //Mittel Ebene
                    IF "MyData".Mark_Mittel_obInOrdnung = 16#00 THEN
                        "SL_O_Byte0_Bit7" := 0;
                        "SL_O_Byte0_Bit6" := 0;
                        "SL_O_Byte0_Bit5" := 0;
                        "SL_O_Byte0_Bit4" := 0;
                    END_IF;
                    IF "MyData".Mark_Mittel_obInOrdnung = 16#01 THEN
                        "SL_O_Byte0_Bit7" := 0;
                        "SL_O_Byte0_Bit6" := 0;
                        "SL_O_Byte0_Bit5" := 0;
                        "SL_O_Byte0_Bit4" := 1;
                    END_IF;
                    IF "MyData".Mark_Mittel_obInOrdnung = 16#02 THEN
                        "SL_O_Byte0_Bit7" := 1;
                        "SL_O_Byte0_Bit6" := 0;
                        "SL_O_Byte0_Bit5" := 1;
                        "SL_O_Byte0_Bit4" := 0;
                    END_IF;
                    // Obere Ebene
                    IF "MyData".Mark_Oben_obInOrdnung = 16#00 THEN
                        "SL_O_Byte0_Bit3" := 0;
                        "SL_O_Byte0_Bit2" := 0;
                        "SL_O_Byte0_Bit1" := 0;
                        "SL_O_Byte0_Bit0" := 0;
                    END_IF;
                    IF "MyData".Mark_Oben_obInOrdnung = 16#01 THEN
                        "SL_O_Byte0_Bit3" := 0;
                        "SL_O_Byte0_Bit2" := 0;
                        "SL_O_Byte0_Bit1" := 0;
                        "SL_O_Byte0_Bit0" := 1;
                    END_IF;
                    IF "MyData".Mark_Oben_obInOrdnung = 16#02 THEN
                        "SL_O_Byte0_Bit3" := 1;
                        "SL_O_Byte0_Bit2" := 0;
                        "SL_O_Byte0_Bit1" := 1;
                        "SL_O_Byte0_Bit0" := 0;
                    END_IF;
                END_IF;
                
                //Wenn Mittlere Ebene in der Arbeitung
                IF "MyData".TUSEND_Data[37] = 16#FF THEN
                    //Grün_Dauer
                    IF "MyData".TUSEND_Data[19] = 16#FF THEN
                        "SL_O_Byte0_Bit7" := 0;
                        "SL_O_Byte0_Bit6" := 0;
                        "SL_O_Byte0_Bit5" := 0;
                        "SL_O_Byte0_Bit4" := 1;
                    END_IF;
                    //RotDauer
                    IF "MyData".TUSEND_Data[22] = 16#FF THEN
                        "SL_O_Byte0_Bit7" := 0;
                        "SL_O_Byte0_Bit6" := 0;
                        "SL_O_Byte0_Bit5" := 1;
                        "SL_O_Byte0_Bit4" := 0;
                    END_IF;
                    //OrangeDauer
                    IF "MyData".TUSEND_Data[25] = 16#FF THEN
                        "SL_O_Byte0_Bit7" := 0;
                        "SL_O_Byte0_Bit6" := 1;
                        "SL_O_Byte0_Bit5" := 0;
                        "SL_O_Byte0_Bit4" := 1;
                    END_IF;
                    //auf anderer Ebene zeigt es Ordnungsinformation
                    //Untere Ebene
                    IF "MyData".Mark_Unten_obInOrdnung = 16#00 THEN
                        "SL_O_Byte1_Bit3" := 0;
                        "SL_O_Byte1_Bit2" := 0;
                        "SL_O_Byte1_Bit1" := 0;
                        "SL_O_Byte1_Bit0" := 0;
                    END_IF;
                    IF "MyData".Mark_Unten_obInOrdnung = 16#01 THEN
                        "SL_O_Byte1_Bit3" := 0;
                        "SL_O_Byte1_Bit2" := 0;
                        "SL_O_Byte1_Bit1" := 0;
                        "SL_O_Byte1_Bit0" := 1;
                    END_IF;
                    IF "MyData".Mark_Unten_obInOrdnung = 16#02 THEN
                        "SL_O_Byte1_Bit3" := 1;
                        "SL_O_Byte1_Bit2" := 0;
                        "SL_O_Byte1_Bit1" := 1;
                        "SL_O_Byte1_Bit0" := 0;
                    END_IF;
                    // Obere Ebene
                    IF "MyData".Mark_Oben_obInOrdnung = 16#00 THEN
                        "SL_O_Byte0_Bit3" := 0;
                        "SL_O_Byte0_Bit2" := 0;
                        "SL_O_Byte0_Bit1" := 0;
                        "SL_O_Byte0_Bit0" := 0;
                    END_IF;
                    IF "MyData".Mark_Oben_obInOrdnung = 16#01 THEN
                        "SL_O_Byte0_Bit3" := 0;
                        "SL_O_Byte0_Bit2" := 0;
                        "SL_O_Byte0_Bit1" := 0;
                        "SL_O_Byte0_Bit0" := 1;
                    END_IF;
                    IF "MyData".Mark_Oben_obInOrdnung = 16#02 THEN
                        "SL_O_Byte0_Bit3" := 1;
                        "SL_O_Byte0_Bit2" := 0;
                        "SL_O_Byte0_Bit1" := 1;
                        "SL_O_Byte0_Bit0" := 0;
                    END_IF;
                END_IF;
                
                //Wenn Obere Ebene in der Arbeitung
                IF "MyData".TUSEND_Data[38] = 16#FF THEN
                    //Grün_Dauer
                    IF "MyData".TUSEND_Data[20] = 16#FF THEN
                        "SL_O_Byte0_Bit3" := 0;
                        "SL_O_Byte0_Bit2" := 0;
                        "SL_O_Byte0_Bit1" := 0;
                        "SL_O_Byte0_Bit0" := 1;
                    END_IF;
                    //RotDauer
                    IF "MyData".TUSEND_Data[23] = 16#FF THEN
                        "SL_O_Byte0_Bit3" := 0;
                        "SL_O_Byte0_Bit2" := 0;
                        "SL_O_Byte0_Bit1" := 1;
                        "SL_O_Byte0_Bit0" := 0;
                    END_IF;
                    //OrangeDauer
                    IF "MyData".TUSEND_Data[26] = 16#FF THEN
                        "SL_O_Byte0_Bit3" := 0;
                        "SL_O_Byte0_Bit2" := 1;
                        "SL_O_Byte0_Bit1" := 0;
                        "SL_O_Byte0_Bit0" := 1;
                    END_IF;
                    //auf anderer Ebene zeigt es Ordnungsinformation
                    //Untere Ebene
                    IF "MyData".Mark_Unten_obInOrdnung = 16#00 THEN
                        "SL_O_Byte1_Bit3" := 0;
                        "SL_O_Byte1_Bit2" := 0;
                        "SL_O_Byte1_Bit1" := 0;
                        "SL_O_Byte1_Bit0" := 0;
                    END_IF;
                    IF "MyData".Mark_Unten_obInOrdnung = 16#01 THEN
                        "SL_O_Byte1_Bit3" := 0;
                        "SL_O_Byte1_Bit2" := 0;
                        "SL_O_Byte1_Bit1" := 0;
                        "SL_O_Byte1_Bit0" := 1;
                    END_IF;
                    IF "MyData".Mark_Unten_obInOrdnung = 16#02 THEN
                        "SL_O_Byte1_Bit3" := 1;
                        "SL_O_Byte1_Bit2" := 0;
                        "SL_O_Byte1_Bit1" := 1;
                        "SL_O_Byte1_Bit0" := 0;
                    END_IF;
                    // Mittlere Ebene
                    IF "MyData".Mark_Mittel_obInOrdnung = 16#00 THEN
                        "SL_O_Byte0_Bit7" := 0;
                        "SL_O_Byte0_Bit6" := 0;
                        "SL_O_Byte0_Bit5" := 0;
                        "SL_O_Byte0_Bit4" := 0;
                    END_IF;
                    IF "MyData".Mark_Mittel_obInOrdnung = 16#01 THEN
                        "SL_O_Byte0_Bit7" := 0;
                        "SL_O_Byte0_Bit6" := 0;
                        "SL_O_Byte0_Bit5" := 0;
                        "SL_O_Byte0_Bit4" := 1;
                    END_IF;
                    IF "MyData".Mark_Mittel_obInOrdnung = 16#02 THEN
                        "SL_O_Byte0_Bit7" := 1;
                        "SL_O_Byte0_Bit6" := 0;
                        "SL_O_Byte0_Bit5" := 1;
                        "SL_O_Byte0_Bit4" := 0;
                    END_IF;
                END_IF;
                
                //Schreiben Datan erst ins Mark Variable
                //
                //Unten_ebene
                IF "MyData".TUSEND_Data[14] = 16#FF AND "MyData".Mark_For_UE < 2 THEN
                    //set Markposition
                    "MyData".Mark_For_UE := "MyData".Mark_For_UE + 1;
                    //in ordnung
                    IF "MyData".TUSEND_Data[11] = 16#FF AND "MyData".TUSEND_Data[32] = 16#FF THEN
                        "MyData".Mark_Unten_obInOrdnung := 16#01;
                        //nicht in ordnung
                    ELSE
                        "MyData".Mark_Unten_obInOrdnung := 16#02;
                    END_IF;
                    //einschreiben
                    IF "RFID_I_Byte0" = 2#1000_0001 THEN
                        "RFID_O_Byte1" := 16#32;// write constant value 
                        "RFID_O_Byte2" := 16#00;
                        "RFID_O_Byte3" := 16#00;
                        "RFID_O_Byte4" := 16#01;
                        "RFID_O_Byte5" := 16#00;
                        "RFID_O_Byte6" := "MyData".Mark_Unten_obInOrdnung;
                        "RFID_O_Byte7" := 16#00;
                        "RFID_O_Byte8" := 16#00;
                        
                        "RFID_O_Byte0" := 16#01;
                        "RFID_O_Byte9" := 16#01;
                    END_IF;
                    
                END_IF;
                //Mittel_ebene
                IF "MyData".TUSEND_Data[15] = 16#FF AND "MyData".Mark_For_ME < 2 THEN
                    //set Markposition
                    "MyData".Mark_For_ME := "MyData".Mark_For_ME + 1;
                    //in ordnung
                    IF "MyData".TUSEND_Data[12] = 16#FF AND "MyData".TUSEND_Data[33] = 16#FF THEN
                        "MyData".Mark_Mittel_obInOrdnung := 16#01;
                        //nicht in ordnung
                    ELSE
                        "MyData".Mark_Mittel_obInOrdnung := 16#02;
                    END_IF;
                    
                    //einschreiben
                    IF "RFID_I_Byte0" = 2#1000_0001 THEN
                        "RFID_O_Byte1" := 16#32;// write constant value 
                        "RFID_O_Byte2" := 16#01;
                        "RFID_O_Byte3" := 16#00;
                        "RFID_O_Byte4" := 16#01;
                        "RFID_O_Byte5" := 16#00;
                        "RFID_O_Byte6" := "MyData".Mark_Mittel_obInOrdnung;
                        "RFID_O_Byte7" := 16#00;
                        "RFID_O_Byte8" := 16#00;
                        
                        "RFID_O_Byte0" := 16#01;
                        "RFID_O_Byte9" := 16#01;
                    END_IF;
                    
                END_IF;
                //Oben_ebene
                IF "MyData".TUSEND_Data[16] = 16#FF AND "MyData".Mark_For_OE < 2 THEN
                    //set Markposition
                    "MyData".Mark_For_OE := "MyData".Mark_For_OE + 1;
                    //in ordnung
                    IF "MyData".TUSEND_Data[13] = 16#FF AND "MyData".TUSEND_Data[34] = 16#FF THEN
                        "MyData".Mark_Oben_obInOrdnung := 16#01;
                        //nicht in ordnung
                    ELSE
                        "MyData".Mark_Oben_obInOrdnung := 16#02;
                    END_IF;
                    
                    //einschreiben
                    IF "RFID_I_Byte0" = 2#1000_0001 THEN
                        "RFID_O_Byte1" := 16#32;// write constant value 
                        "RFID_O_Byte2" := 16#02;//Anfangposition
                        "RFID_O_Byte3" := 16#00;
                        "RFID_O_Byte4" := 16#01;
                        "RFID_O_Byte5" := 16#00;
                        "RFID_O_Byte6" := "MyData".Mark_Oben_obInOrdnung;
                        "RFID_O_Byte7" := 16#00;
                        "RFID_O_Byte8" := 16#00;
                        
                        "RFID_O_Byte0" := 16#01;
                        "RFID_O_Byte9" := 16#01;
                    END_IF;
                    
                END_IF;

                
            END_IF;
            
            //Helligkeit gut, Ebene Fertig, Zeige Ebene ob in der Ordnung
            IF "MyData".TUSEND_Data[27] = 16#00 AND "MyData".TUSEND_Data[35] = 16#00 THEN
                
                IF "MyData".TUSEND_Data[14] = 16#00 THEN
                    //Reset Markposition
                    "MyData".Mark_For_UE := 0;
                    IF "MyData".Mark_Unten_obInOrdnung = 16#00 THEN
                        "SL_O_Byte1_Bit3" := 0;
                        "SL_O_Byte1_Bit2" := 0;
                        "SL_O_Byte1_Bit1" := 0;
                        "SL_O_Byte1_Bit0" := 0;
                    END_IF;
                    IF "MyData".Mark_Unten_obInOrdnung = 16#01 THEN
                        "SL_O_Byte1_Bit3" := 0;
                        "SL_O_Byte1_Bit2" := 0;
                        "SL_O_Byte1_Bit1" := 0;
                        "SL_O_Byte1_Bit0" := 1;
                    END_IF;
                    IF "MyData".Mark_Unten_obInOrdnung = 16#02 THEN
                        "SL_O_Byte1_Bit3" := 1;
                        "SL_O_Byte1_Bit2" := 0;
                        "SL_O_Byte1_Bit1" := 1;
                        "SL_O_Byte1_Bit0" := 0;
                    END_IF;
                END_IF;
                
                IF "MyData".TUSEND_Data[15] = 16#00 THEN
                    //Reset Markposition
                    "MyData".Mark_For_ME := 0;
                    IF "MyData".Mark_Mittel_obInOrdnung = 16#00 THEN
                        "SL_O_Byte0_Bit7" := 0;
                        "SL_O_Byte0_Bit6" := 0;
                        "SL_O_Byte0_Bit5" := 0;
                        "SL_O_Byte0_Bit4" := 0;
                    END_IF;
                    IF "MyData".Mark_Mittel_obInOrdnung = 16#01 THEN
                        "SL_O_Byte0_Bit7" := 0;
                        "SL_O_Byte0_Bit6" := 0;
                        "SL_O_Byte0_Bit5" := 0;
                        "SL_O_Byte0_Bit4" := 1;
                    END_IF;
                    IF "MyData".Mark_Mittel_obInOrdnung = 16#02 THEN
                        "SL_O_Byte0_Bit7" := 1;
                        "SL_O_Byte0_Bit6" := 0;
                        "SL_O_Byte0_Bit5" := 1;
                        "SL_O_Byte0_Bit4" := 0;
                    END_IF;
                END_IF;
                
                IF "MyData".TUSEND_Data[16] = 16#00 THEN
                    //Reset Markposition
                    "MyData".Mark_For_OE := 0;
                    IF "MyData".Mark_Oben_obInOrdnung = 16#00 THEN
                        "SL_O_Byte0_Bit3" := 0;
                        "SL_O_Byte0_Bit2" := 0;
                        "SL_O_Byte0_Bit1" := 0;
                        "SL_O_Byte0_Bit0" := 0;
                    END_IF;
                    IF "MyData".Mark_Oben_obInOrdnung = 16#01 THEN
                        "SL_O_Byte0_Bit3" := 0;
                        "SL_O_Byte0_Bit2" := 0;
                        "SL_O_Byte0_Bit1" := 0;
                        "SL_O_Byte0_Bit0" := 1;
                    END_IF;
                    IF "MyData".Mark_Oben_obInOrdnung = 16#02 THEN
                        "SL_O_Byte0_Bit3" := 1;
                        "SL_O_Byte0_Bit2" := 0;
                        "SL_O_Byte0_Bit1" := 1;
                        "SL_O_Byte0_Bit0" := 0;
                    END_IF;
                END_IF;
            END_IF;
            
        END_IF;
    END_IF;
END_IF;







    
